import { Secp256k1KeyIdentity } from "@dfinity/identity-secp256k1";
import { Principal } from "@dfinity/principal";

/// How to make calls to the canister
/// And how to make authenticated calls to the canister
/// TODO: add Internet Identity or NFID or Stoic Wallet.


// ------------------------------------------------------------
// You can import the premade anonymous agent autogenerated in /src/declarations
import { shrine_backend } from '../../declarations/shrine_backend';
// ------------------------------------------------------------



// ------------------------------------------------------------
// Or you can create your own agent given the canisterId and a custom identity.
// Here we're using a static identity for testing purposes.
// note: the Secp256k1KeyIdentity library uses Node.js specific library,
// so vite throws some warnings in console.
// We're fine because this lib is just for local testing/dev.
import { createActor } from "../../declarations/shrine_backend";

const identity = Secp256k1KeyIdentity.fromParsedJson(
    // TODO: Make this identity inaccessable from prod.
    STATIC_CONTEXT.testingIdentityJSON
);

// process.env.SHRINE_BACKEND_CANISTER_ID gets replaced by vite at build time
const shrine_backend_authed = createActor(
    process.env.SHRINE_BACKEND_CANISTER_ID as unknown as Principal,
    { agentOptions: { identity } }
);
// ------------------------------------------------------------



export {
    shrine_backend,
    shrine_backend_authed,
};





